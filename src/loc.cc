// ---------------------------------------------------------------------------
// qcp
// ---------------------------------------------------------------------------
#include "loc.h"
// ---------------------------------------------------------------------------
namespace qcp {
// ---------------------------------------------------------------------------
typename SrcLoc::loc_off_t SrcLoc::locEnd() const {
   return loc_ + len_;
}
// ---------------------------------------------------------------------------
// idea from aengelke
SrcLoc SrcLoc::operator|(const SrcLoc& other) const {
   return {std::min(loc_, other.loc_), std::max(locEnd(), other.locEnd())};
}
// ---------------------------------------------------------------------------
SrcLoc& SrcLoc::operator|=(const SrcLoc& other) {
   *this = *this | other;
   return *this;
}
// ---------------------------------------------------------------------------
SrcLoc SrcLoc::truncate(loc_len_t newLen) const {
   return SrcLoc(loc_, newLen);
}
// ---------------------------------------------------------------------------
typename SrcLoc::loc_off_t SrcLoc::loc() const {
   return loc_;
}
// ---------------------------------------------------------------------------
typename SrcLoc::loc_len_t SrcLoc::len() const {
   return len_;
}
// ---------------------------------------------------------------------------
} // namespace qcp
// ---------------------------------------------------------------------------
