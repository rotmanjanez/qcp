%language=C++
%define class-name ReservedKeywordHash
%define lookup-function-name isInWordSet
%define slot-name keyword
%compare-lengths
%readonly-tables
%enum
%compare-strncmp
%struct-type
%{
// ---------------------------------------------------------------------------
// qcp
// ---------------------------------------------------------------------------
#include "token.h"
// ---------------------------------------------------------------------------
#include <cstring>
// ---------------------------------------------------------------------------
using TK = qcp::token::Kind;
// ---------------------------------------------------------------------------
namespace qcp {
namespace token {
// ---------------------------------------------------------------------------
%}
struct GPerfToken;
%%
"alignas", TK::ALIGNAS
"_Alignas", TK::ALIGNAS
"alignof", TK::ALIGNOF
"_Alignof", TK::ALIGNOF
"auto", TK::AUTO
"bool", TK::BOOL
"_Bool", TK::BOOL
"break", TK::BREAK
"case", TK::CASE
"char", TK::CHAR
"const", TK::CONST
"constexpr", TK::CONSTEXPR
"continue", TK::CONTINUE
"default", TK::DEFAULT
"do", TK::DO
"double", TK::DOUBLE
"else", TK::ELSE
"enum", TK::ENUM
"extern", TK::EXTERN
"false", TK::FALSE
"float", TK::FLOAT
"for", TK::FOR
"goto", TK::GOTO
"if", TK::IF
"inline", TK::INLINE
"int", TK::INT
"long", TK::LONG
"nullptr", TK::NULLPTR
"register", TK::REGISTER
"restrict", TK::RESTRICT
"return", TK::RETURN
"short", TK::SHORT
"signed", TK::SIGNED
"sizeof", TK::SIZEOF
"static", TK::STATIC
"static_assert", TK::STATIC_ASSERT
"_Static_assert", TK::STATIC_ASSERT
"struct", TK::STRUCT
"switch", TK::SWITCH
"thread_local", TK::THREAD_LOCAL
"_Thread_local", TK::THREAD_LOCAL
"true", TK::TRUE
"typedef", TK::TYPEDEF
"typeof", TK::TYPEOF
"typeof_unqual", TK::TYPEOF_UNQUAL
"union", TK::UNION
"unsigned", TK::UNSIGNED
"void", TK::VOID
"volatile", TK::VOLATILE
"while", TK::WHILE
"_Atomic", TK::ATOMIC
"_BitInt", TK::BITINT
"_Complex", TK::COMPLEX
"_Decimal128", TK::DECIMAL128
"_Decimal32", TK::DECIMAL32
"_Decimal64", TK::DECIMAL64
"_Generic", TK::GENERIC
"_Imaginary", TK::IMAGINARY
"_Noreturn", TK::NORETURN
%%
// ---------------------------------------------------------------------------
} // end namespace token
} // end namespace qcp
// ---------------------------------------------------------------------------